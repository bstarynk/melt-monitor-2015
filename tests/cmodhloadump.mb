# file cmodhloadump.mb -*- mode: indented-text; indent-tabs-mode: nil -*-


^global !ldstatkind_en (
  ^* descr type
  ^* comment "type for load state kind"
  ^* type enum
  ^* enum [
    ^global !lstk_empty (
      ^* descr enumerator
      ^* comment "for empty load element"
    )
    ^global !lstk_mark (
      ^* descr enumerator
      ^* comment "for marking load element"
    )
    ^global !lstk_int (
      ^* descr enumerator
      ^* comment "for int load element"
    )
    ^global !lstk_dbl (
      ^* descr enumerator
      ^* comment "for double load element"
    )
    ^global !lstk_val (
      ^* descr enumerator
      ^* comment "for value load element"
    )
  ]
)

^global !cptr_t (
  ^* descr type
  ^* c_code "const void*"
  ^* comment "raw C pointer type"
)

^global !cfile_t (
  ^* descr type
  ^* c_code "FILE*"
  ^* comment "C <stdio.h> file handle pointer"
)

^global !int32_t (
  ^* descr type
  ^* c_code "int32_t"
  ^* comment "signed 32 bits integer type"
)

^global !ldstatelem_ty (
  ^* descr type
  ^* comment "type for load state element"
  ^* type struct
  ^* struct [
    ^global !lst_kind (
      ^* descr field
      ^* comment "give the kind of a loader element"
      ^* type ldstatkind_en
    )
    ^global ?ldstatelem_ty (
      ^* descr union
      ^* comment "the anonymous union of a loader element"
      ^* union [
        ^global !lst_ptr (
          ^* descr field
          ^* comment "raw pointer field in loader stack"
          ^* type cptr_t
         )
        ^global !lst_mark (
          ^* descr field
          ^* comment "mark field  in loader stack"
          ^* type uint32_t
         )
        ^global !lst_int (
          ^* descr field
          ^* comment "int field  in loader stack"
          ^* type int
         )
        ^global !lst_dbl (
          ^* descr field
          ^* comment "double field  in loader stack"
          ^* type double
         )
        ^global !lst_val (
          ^* descr field
          ^* comment "value field  in loader stack"
          ^* type value
         )
      ]
    )
  ]
)

^global !itemhashedset_ty (
  ^* descr type
  ^* comment "type of hashed set of items"
  ^* type struct
  ^* extend countedata_ty
  ^* struct [
    ^global !hset_items (
        ^* comment "the field giving the items hashtable in item hashed set"
        ^* descr field
        ^* type %flexible_array(item)
      )
  ]
)

^global !loader_ty  (
  ^* descr type
  ^* comment "type for loader"
  ^* type struct
  ^* extend hashedvalue_ty
  ^* struct [
    ^global !ld_stacktop (
          ^* descr field
          ^* comment "loader stack top index"
          ^* type int32_t
          )
    ^global !ld_prevmark (
          ^* descr field
          ^* comment "loader stack previous mark index"
          ^* type int32_t
          )
    ^global !ld_stackarr (
          ^* descr field
          ^* comment "loader stack array"
          ^* type %pointer(ldstatelem_ty)
          )
    ^global !ld_hsetitems (
          ^* descr field
          ^* comment "loader stack hashed set of items"
          ^* type %pointer(itemhashedset_ty)
          )
    ^global !ld_magic (
          ^* descr field
          ^* comment "loader stack magic, always MOM_LOADER_MAGIC"
          ^* type uint32_t
          )
    ^global !ld_file (
          ^* descr field
          ^* comment "loader file"
          ^* type cfile_t
          )
    ^global !ld_pathstr (
          ^* descr field
          ^* comment "loader path string"
          ^* type %pointer(boxstring_ty)
          )
    ]
)

^global !loaderptr_t (
  ^* comment "type of pointer to loader"
  ^* descr type
  ^* type %pointer(loader_ty)
)

^global !loaderstatelemptr_t (
  ^* comment "type of pointer to loader state element"
  ^* descr type
  ^* type %pointer(ldstatelem_ty)
)

^global !ldf (
  ^* descr formal
  ^* type loaderptr_t
  ^* comment "formal for loader"
)

^global !ldelems (
  ^* descr formal
  ^* type loaderstatelemptr_t
  ^* comment "formal for loader state array"
)

^global !ldsz (
  ^* descr formal
  ^* type uint32_t
  ^* comment "formal for loader state size"
)

^item signature_loader_caret (
   ^* comment "signature: loaderptr item -> unit for carets in loadfile"
   ^* descr signature
   ^* formals [ itm0 ldf ]
   ^* result unit
   )
   
^item signature_loader_paren (
   ^* comment "signature: loaderptr item -> unit for carets in loadfile"
   ^* descr signature
   ^* formals [ itm0 ldf ldelems ldsz ]
   ^* result unit
   )
   
^global !dumpstate_en (
  ^* descr type
  ^* comment "type for dump state"
  ^* type enum
  ^* enum [
    ^global !dumsta_none (
      ^* descr enumerator
      ^* comment "invalid dump state"
    )
    ^global !dumsta_scan  (
      ^* descr enumerator
      ^* comment "scanning dump state"
    )
    ^global !dumsta_emit  (
      ^* descr enumerator
      ^* comment "emitting dump state"
    )
  ]
)

^global !nb_quelem (
  ^* descr constant
  ^* type int
  ^* value 7
)

^global !quelem_st (
  ^* descr type
  ^* comment "internal struct for queue element chunks"
  ^* type struct
  ^* struct [
    ^global !qu_next (
      ^* descr field
      ^* comment "the next pointer"
      ^* type %pointer(quelem_st)      
    )
    ^global !qu_elems (
      ^* descr field
      ^* comment "small chunk of elements"
      ^* type %array(value nb_quelem)
    )
  ]
)

^global !queue_ty (
  ^* descr type
  ^* notice xty_queue
  ^* type struct
  ^* extend anyvalue_ty
  ^* struct [
    ^global !qu_first (
      ^* descr field
      ^* comment "the first pointer"
      ^* type %pointer(quelem_st)      
    )
    ^global !qu_last (
      ^* descr field
      ^* comment "the last pointer"
      ^* type %pointer(quelem_st)      
    )
  ]
)

^global !dumper_ty  (
  ^* descr type
  ^* comment "type for dumper"
  ^* type struct
  ^* extend hashedvalue_ty
  ^* struct [
    ^global !du_state (
       ^* descr field
       ^* comment "dumper state"
       ^* type dumpstate_en
       )
    ^global !du_predefset (
       ^* descr field
       ^* comment "dumper set of predefined"
       ^* type %pointer(boxset_ty)
       )
    ^global !du_itemhset (
       ^* descr field
       ^* comment "dumper hashed set of items"
       ^* type %pointer(itemhashedset_ty)
       )
    ^global !du_predefhtmpath (
       ^* descr field
       ^* comment "dumper temporary path for predefined items"
       ^* type %pointer(boxstring_ty)
    )
    ^global !du_globalhtmpath (
       ^* descr field
       ^* comment "dumper temporary path for global state"
       ^* type %pointer(boxstring_ty)
    )
    ^global !du_itemsque (
      ^* descr field
      ^* comment "dumper queue of items to scan"
      ^* type %pointer(queue_ty)
    )
    ^global !du_emitfile (
      ^* descr field
      ^* comment "dumper emit file"
      ^* type cfile_t
    )
  ]
)


^global !loadump_module (
   ^* comment "our loadump_module"
   ^* descr module
   ^* declare [ ]
   ^* module [
     nb_quelem
     quelem_st
     queue_ty
     ldstatkind_en
     ldstatelem_ty
     loader_ty
     signature_loader_caret
     signature_loader_paren
     dumpstate_en
     dumper_ty
   ]
 )
 
^display "our loadump_module:" loadump_module
