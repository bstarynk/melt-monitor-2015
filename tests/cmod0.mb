# file cmod0.mb -*- indented-text -*-


^item !val0 (
   ^at comment "val0 in cmod0.mb"
   ^at descr formal
   ^at type value
)


^item !str0 (
   ^at comment "str0 in cmod0.mb"
   ^at descr formal
   ^at type string
)

^item !signature_value_to_void (
   ^at comment "signature: value -> void, in cmod0.mb"
   ^at descr signature
   ^at formals [ val0 ]
   ^at result unit
)


^item !signature_string_value_to_void (
   ^at comment "signature: string, value -> void, in cmod0.mb"
   ^at descr signature
   ^at formals [ str0 val0 ]
   ^at result unit
)

^item !show_msg_value_prim (
  ^at comment "primitive to show a value with a message"
  ^at descr primitive
  ^at signature signature_string_value_to_void
  ^at c_expansion %chunk(
  "do {long _nl=ftell(stdout); fputs(mom_boxstring_cstr("  str0  "), stdout);\n"
  "mom_output_value(stdout,&_nl,0, ("  val0  "));}while(0)\n"
  )
)

^item !tiny_func (
   ^at comment "our tiny_func from cmod0.mb"
   ^at descr func
   ^at signature signature_value_to_void
   ^at body [
    ^item ?run (
      ^at descr run
      ^at comment "show the val0 using show_msg_value_prim"
      ^at run show_msg_value_prim
      ^sequence (
        "tiny-showing: "
	val0
      )
    )
   ]
)

^item !tiny_module (
   ^at comment "our tiny_module from cmod0.mb"
   ^at descr module
   ^at module [
     tiny_func
   ]
)


^display "final tiny_module:" tiny_module

#eof cmod0.mb
