# file cmodbty.mb -*- indented-text -*-

^global !uint8_t (
  ^* comment "the uint8_t type of 8 bit unsigned"
  ^* descr type
  ^* c_code "uint8_t"
  )

^global !uint16_t (
  ^* comment "the uint16_t type of 16 bit unsigned"
  ^* descr type
  ^* c_code "uint16_t"
  )
^global !uint32_t (
  ^* comment "the uint32_t type of 32 bit unsigned"
  ^* descr type
  ^* c_code "uint32_t"
  )

^global !hash_t (
  ^* comment "the unsigned type of hash-code"
  ^* descr type
  ^* c_code "momhash_t"
  )

^global !atomic_int16_t (
  ^* comment "the atomic_int16_t type of 16 bit signed and atomic"
  ^* descr type
  ^* c_code "mom_atomic_int16_t"
  )

^global !bool (
  ^* comment "the type for booleans"
  ^* descr type
  ^* c_code "bool"
)

^global !anyvalue_ty (
  ^global
  ^* comment "the type of any value"
  ^* descr type
  ^* type struct
  ^* struct [
      ^global va_itype (
        ^* comment "the field giving the type"
        ^* descr field
        ^* type uint16_t
      )
      ^global va_ixv (
        ^* comment "the field giving the index"
        ^* descr field
        ^* type atomic_int16_t
      )
      ^global va_size (
        ^* comment "the field giving the size"
        ^* descr field
        ^* type atomic_int16_t
      )
  ]
)
  
^global !hashedvalue_ty (
  ^* comment "the type of hashed value"
  ^* descr type
  ^* type struct
  ^* extend anyvalue_ty
  ^* struct [
      ^global hva_hash (
        ^* comment "the field giving the hash"
        ^* descr field
        ^* type hash_t
      )
  ]
)

^global val0 (
   ^* comment "val0 in cmodbty.mb"
   ^* descr formal
   ^* type value
)

^global !signature_value_to_bool (
  ^* descr signature
  ^* formals [ val0 ]
  ^* result bool
)

^global !signature_value_to_int (
  ^* comment "signature value -> int"
  ^* formals [ val0 ]
  ^* result int
)

^global !cast_pointer_to_int_prim (
  ^* comment "primitive to cast a pointer to an int"
  ^* descr primitive
  ^* signature signature_value_to_int
  ^* c_expansion %code_chunk(
      "/*cast_pointer_to_int_prim*/ (intptr_t)(" val0 ")" )
)

^global !valid_value_pointer (
  ^* comment "inline function testing validity of value pointer"
  ^* descr inline
  ^* signature signature_value_to_bool
  ^* body  ^global ?valid_value_pointer (
       ^* comment "body of valid_value_pointer"
       ^* descr sequence
       ^* body
       [
       ]
   )
)

## eof cmodbty.mb
